{
    // Place your firebase-nextjs-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    //     "scope": "javascript,typescript",
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "component": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": "next-page",
        "body": [
            "export default function Page({ }) {",
            "  return (",
            "    <main>",
            "    </main>",
            "  )",
            "}",
        ],
        "description": "React component"
    },
    "componentWithProps": {
        "scope": "javascript,javascriptreact,typescriptreact",
        "prefix": "tscomp",
        "body": [
            "export default function ${1:mycomp}(props: { ${2:prop: string} }) {",
            "    return (",
            "        <$0>",
            "        </>",
            "    )",
            "}"
        ]
    },
    "link": {
        "scope": "javascript,javascriptreact,typescriptreact",
        "prefix": "nlink",
        "body": [
            "<Link href={`${1:mycomp}`}>",
            "    $0",
            "</Link>"
        ]
    },
    "arrow function": {
        "scope": "javascript,javascriptreact,typescriptreact",
        "prefix": "afn",
        "body": [
            "(${1:param}) => {",
            "    $0",
            "}"
        ]
    },
    "useEdit": {
        "scope": "javascript,javascriptreact,typescriptreact",
        "prefix": "ued",
        "body": [
            "const editProps: EditProps = useEdit(",
            "    props.person?.data().name",
            "    , `Fachschaft/${${1:props.fachschaftId}}/Vereine/${${2:props.vereinId}}/${3:optional}`",
            "    , (inputValue: string): ${4:PersonModel} => {",
            "        return {",
            "            name: ${5:inputValue}",
            "            , ${6:nextArg}",
            "        } as ${4:PersonModel}",
            "    }",
            ")",
        ]
    }

}